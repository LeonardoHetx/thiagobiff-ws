const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{data:function(){return{loading:!1,globalSettings:{},ui:{strings:{siteSettings:__("Site settings","uipress-lite"),saveSettings:__("Save settings","uipress-lite"),settingsSaved:__("Settings saved","uipress-lite"),proOption:__("This is a pro option. Upgrade to unlock")}}}},inject:["uipData","router","uipress"],mounted:function(){this.loading=!1,this.getSettings()},watch:{"uiTemplate.globalSettings":{handler(e,t){},deep:!0},"uiTemplate.globalSettings":{handler(e,t){},deep:!0}},computed:{},methods:{getSettings(){let e=this;e.loading=!0;let t=new FormData;t.append("action","uip_get_global_settings"),t.append("security",uip_ajax.security),e.uipress.callServer(uip_ajax.ajax_url,t).then(t=>{e.loading=!1,t.error?e.uipress.notify(t.message,"","error",!0):(this.getUserStyles(),t.options&&e.uipress.isObject(t.options)&&Object.keys(t.options).length>0&&(e.globalSettings=t.options))})},getUserStyles(){let e=this,t=new FormData;t.append("action","uip_get_ui_styles"),t.append("security",uip_ajax.security),e.uipress.callServer(uip_ajax.ajax_url,t).then(t=>{t.error||t.styles&&e.injectSavedStyles(t.styles)})},injectSavedStyles(e){let t=this.uipData.themeStyles;for(let i in t){let n=t[i];e[n.name]&&("value"in e[n.name]&&(n.value=e[n.name].value),"darkValue"in e[n.name]&&(n.darkValue=e[n.name].darkValue))}for(let t in e){let i=e[t];i.user&&(this.uipData.themeStyles[i.name]=i)}},returnTemplateOption(e,t){let i=t.uniqueKey,n=this.globalSettings;return e in n||(n[e]={}),i in n[e]||(t.accepts===String&&(n[e][i]=""),t.accepts===Array&&(n[e][i]=[]),t.accepts===Object&&(n[e][i]={}),t.accepts===Boolean&&(n[e][i]=!1)),n[e][i]},saveTemplateOption(e,t,i){this.globalSettings[e][t]=i},saveSettings(){let e=this,t=e.uipress.uipEncodeJson(e.globalSettings),i=this.formatStyles(),n=JSON.stringify(i,(e,t)=>"true"===t?"uiptrue":!0===t?"uiptrue":"false"===t?"uipfalse":!1===t?"uipfalse":""===t?"uipblank":t),a=new FormData;a.append("action","uip_save_global_settings"),a.append("security",uip_ajax.security),a.append("settings",t),a.append("styles",n),e.uipress.callServer(uip_ajax.ajax_url,a).then(t=>{t.error?e.uipress.notify(t.message,"","error",!0):e.uipress.notify(e.ui.strings.settingsSaved,"","success",!0)})},formatStyles(){let e=this.uipData.themeStyles,t={};for(let i in e)e[i].value&&(t[e[i].name]||(t[e[i].name]={}),t[e[i].name].value=e[i].value),e[i].darkValue&&(t[e[i].name]||(t[e[i].name]={}),t[e[i].name].darkValue=e[i].darkValue),e[i].user&&(t[e[i].name].user=e[i].user,t[e[i].name].label=e[i].label,t[e[i].name].name=e[i].name,t[e[i].name].type=e[i].type);return t}},template:'\n      <div class="uip-flex uip-w-100p uip-h-100p">\n        <div class="uip-flex uip-flex-column uip-w-100p uip-max-h-100p uip-flex-no-wrap">\n        \n          <div class="uip-text-l uip-text-emphasis uip-padding-m">{{ui.strings.siteSettings}}</div>\n          \n          <div v-if="loading" class="uip-w-100p uip-flex uip-flex-middle uip-flex-center uip-padding-m"><loading-chart></loading-chart></div>\n          \n          <div class="uip-flex-grow uip-overflow-auto uip-flex uip-flex-column uip-row-gap-s uip-padding-m uip-padding-remove-top">\n            \x3c!-- Dynamic settings --\x3e\n            <template v-if="!loading" v-for="group in uipData.globalGroupOptions">\n              <accordion :openOnTick="false">\n                <template v-slot:title>\n                  <div class="uip-flex-grow uip-flex uip-gap-xxs uip-flex-center uip-text-bold">\n                    <div class="uip-icon">{{group.icon}}</div>\n                    <div class="">{{group.label}}</div>\n                  </div>\n                </template>\n                <template v-slot:content>\n                  <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-m">\n                    \x3c!--Loop through group settings --\x3e\n                    <div v-for="option in group.settings">\n                      <div class="uip-text-bold uip-margin-bottom-xxs">{{option.label}}</div>\n                      <div v-if="option.help" class="uip-text-s uip-text-muted uip-margin-bottom-xs">{{option.help}}</div>\n                      \n                      <a href="https://uipress.co?utm_source=uipressupgrade&utm_medium=referral" target="_BLANK" v-if="option.proOption" class="uip-padding-xxs uip-border-round uip-background-green-wash uip-text-s uip-link-default uip-no-underline">\n                        {{ui.strings.proOption}}\n                      </a>\n                      \n                      <component v-else :is="option.component" :value="returnTemplateOption(group.name, option)" :args="option.args"\n                      :returnData="function(data){saveTemplateOption(group.name, option.uniqueKey, data)}"></component>\n                      \n                      \n                      \n                    </div>\n                    <template v-if="group.name == \'theme\'">\n                      <list-variables></list-variables>\n                    </template>\n                    \x3c!--End loop through group settings --\x3e\n                  </div>\n                </template>\n              </accordion>\n            </template>\n            \x3c!-- End dynamic settings --\x3e\n          </div>\n          \n          <div class="uip-flex uip-flex-right uip-padding-m">\n          \n            <button class="uip-button-primary" @click="saveSettings()">{{ui.strings.saveSettings}}</button>\n            \n          </div>\n          \n          \n        </div>\n      </div>'}};